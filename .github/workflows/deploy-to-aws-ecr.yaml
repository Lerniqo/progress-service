name: Build and Push Progress Service to AWS ECR

on:
  push:
    branches:
      - main  # Trigger on main branch
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ecs-multi-app-dev-progress-service

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test

      - name: Run build
        run: pnpm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata
        id: meta
        run: |
          echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          echo "TIMESTAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:${{ steps.meta.outputs.IMAGE_TAG }} .
          docker build -t $ECR_REPOSITORY:latest .

      - name: Tag Docker images for ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          docker tag $ECR_REPOSITORY:${{ steps.meta.outputs.IMAGE_TAG }} $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ steps.meta.outputs.IMAGE_TAG }}
          docker tag $ECR_REPOSITORY:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Push Docker images to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ steps.meta.outputs.IMAGE_TAG }}
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Output image information
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "üéâ Images pushed successfully!"
          echo "üì¶ Tagged Image: $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ steps.meta.outputs.IMAGE_TAG }}"
          echo "üì¶ Latest Image: $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest"
          echo "üè∑Ô∏è  Image Tag: ${{ steps.meta.outputs.IMAGE_TAG }}"
          echo "‚è∞ Build Time: ${{ steps.meta.outputs.TIMESTAMP }}"
